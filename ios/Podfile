# Obtenha o caminho para o script react_native_pods.rb usando Node
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve("react-native/scripts/react_native_pods.rb", {paths: [process.argv[1]]})', __dir__]).strip

platform :ios, '13.0'

# Se você estiver usando USE_FRAMEWORKS, configure os frameworks vinculados
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'DVRO' do
  pod 'OneSignalXCFramework'
  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways/Permission-LocationAlways.podspec"
  pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse/Permission-LocationWhenInUse.podspec"

  config = use_native_modules!

  # Removida a linha com get_default_flags() por estar depreciada

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false,
    :fabric_enabled => false,
    :flipper_configuration => FlipperConfiguration.disabled,  # Configuração para desabilitar o Flipper
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'DVROTests' do
    inherit! :complete
    # Pods para testes (se houver)
  end

  post_install do |installer|
    # Chamada padrão do post_install para o React Native
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    # Workaround para M1 com Xcode 12.5 ou superior
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
