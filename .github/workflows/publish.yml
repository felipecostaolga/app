name: Build & Publish Android (S3 Keystore)

on:
  push:
    branches-ignore: ["main"]  # Dispara em pushes para qualquer branch exceto 'main'
  workflow_dispatch:            # Permite disparo manual

jobs:
  publish-android:
    runs-on: macos-latest       # Pode ser ubuntu-latest se não precisar de macOS

    steps:
      # 1) Torna o repositório público
      - name: Make Repo Public
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GH_TOKEN_REPO }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/felipecostaolga/app \
            -d '{"private": false}'

      # 2) Checkout do repositório
      - name: Checkout
        uses: actions/checkout@v3

      # 3) Instalar o AWS CLI (no macOS, usando brew)
      - name: Install AWS CLI
        run: |
          brew install awscli

      # 4) Configurar e Baixar o Keystore do S3
      - name: Download Keystore from S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2  # Ajuste a região se for diferente
        run: |
          # Configurar a AWS CLI usando as variáveis de ambiente acima
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set default.region "$AWS_DEFAULT_REGION"

          # Baixar o arquivo do S3
          aws s3 cp "s3://app-generator-robson/keystores/chefinhos-olga.keystore" "android/app/chefinhos-olga.keystore"

          echo "Listando arquivos em android/app/ para conferir:"
          ls -la android/app/

      # 5) Configurar JDK (17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 6) Configurar Node (Ex.: para React Native)
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 7) Configurar Ruby (para Fastlane)
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      # 8) Instalar dependências (Node)
      - name: Install Dependencies
        run: npm install --force

     # 9) Criar o arquivo google-play-key.json (para Supply)
      - name: Create Google JSON
        run: echo "${{ secrets.ANDROID_JSON_KEY }}" | base64 --decode > android/fastlane/google-play-key.json


      # 10) Instalar Fastlane
      - name: Install Fastlane
        env:
          ANDROID_JSON_KEY: ${{ secrets.ANDROID_JSON_KEY }}

        run: gem install fastlane

      # 11) Executar Build & Deploy do Android via Fastlane
      - name: Deploy Android
        run: |
          cd android
          # Tenta lane :deploy
          # Se falhar (app não existe), faz :create_app e depois :deploy
          fastlane deploy || (fastlane create_app && fastlane deploy)

      # 12) (Opcional) Remover o keystore do runner no final
      - name: Remove Keystore
        run: rm -f android/app/takeajuice-olga.keystore

      # 13) Torna o repositório privado novamente
      - name: Make Repo Private
        if: always()
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GH_TOKEN_REPO }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/felipecostaolga/app \
            -d '{"private": true}'