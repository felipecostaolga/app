name: Build & Publish Android e iOS (S3 Keystore)

on:
  push:
    branches-ignore: ["master"]
  workflow_dispatch:

jobs:
  publish-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Clear Gem Cache
        run: |
          gem sources --remove https://rubygems.org/
          gem sources -a https://rubygems.org/
          gem cleanup
          gem uninstall boost -aIx || true

      # Atualiza o CocoaPods para a versão mais recente
      - name: Update CocoaPods
        run: sudo gem install cocoapods

      # Limpa o cache do CocoaPods para evitar problemas de checksum
      - name: Clear CocoaPods Cache
        run: pod cache clean --all

      - name: Install Dependencies
        run: npm install --force

      - name: install Dependencies (extra)
        run: |
          npm install --save-dev patch-package postinstall-postinstall --force

      - name: Install pod dependencies
        run: |
          cd /Users/runner/work/app/app/ios
          sudo rm -rf Podfile.lock
          pod install --no-repo-update

      - name: Install Fastlane
        run: gem install fastlane

      - name: Create API Key
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | base64 --decode > android/AuthKey_OLGA.p8

      - name: Debug API Key
        run: |
          echo "==== Conteúdo do AuthKey_OLGA.p8 ===="
          cat android/AuthKey_OLGA.p8
          echo "======================================"

      - name: Build & Deploy iOS
        env:
          FASTLANE_USER: ${{ secrets.APPLE_ID }}
          FASTLANE_PASSWORD: ${{ secrets.APPLE_SPECIFIC_PASSWORD }}
          CERT_GIT: ${{ secrets.GH_TOKEN_REPO }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          cd android
          fastlane ios deploy_ios

      - name: Notify Discord (iOS)
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d '{"content":"✅ Build & publicação do iOS *SUCESSO*! "}' \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
          else
            curl -X POST -H "Content-Type: application/json" \
              -d '{"content":"❌ Build & publicação do iOS *FALHOU*."}' \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
          fi
