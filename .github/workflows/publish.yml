name: Build & Publish Android and iOS (S3 Keystore)

on:
  push:
    branches-ignore: ["master"]  
  workflow_dispatch:

jobs:
  publish-android:
    runs-on: macos-latest

    steps:
      # 1) Checkout do repositório
      - name: Checkout
        uses: actions/checkout@v3

      # 2) Instalar o AWS CLI
      - name: Install AWS CLI
        run: brew install awscli

      # 3) Configurar e Baixar o Keystore do S3
      - name: Download Keystore from S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2  
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set default.region "$AWS_DEFAULT_REGION"

          aws s3 cp "s3://app-generator-robson/keystores/thefamous-olga.keystore" "android/app/thefamous-olga.keystore"

          ls -la android/app/

      # 4) Configurar JDK (17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 5) Configurar Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 6) Configurar Ruby
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      # 7) Instalar dependências
      - name: Install Dependencies
        run: npm install --force

      # 8) Criar o arquivo google-play-key.json
      - name: Create Google JSON
        run: echo "${{ secrets.ANDROID_JSON_KEY }}" | base64 --decode > android/google-play-key.json

      # Debug JSON
      - name: Debug JSON
        run: ls -la android/

      # 9) Instalar Fastlane
      - name: Install Fastlane
        run: gem install fastlane

      # 10) Executar Build & Deploy do Android via Fastlane
      - name: Deploy Android
        run: |
          cd android
          fastlane deploy || (fastlane create_app && fastlane deploy)

      # 11) Remover o keystore do runner no final
      - name: Remove Keystore
        run: rm -f android/app/thefamous-olga.keystore

  publish-ios:
    runs-on: macos-latest
    needs: publish-android # Garantir que o iOS só execute após o Android

    steps:
      # 1) Checkout do repositório
      - name: Checkout
        uses: actions/checkout@v3

      # 2) Configurar Ruby
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      # 3) Instalar Fastlane
      - name: Install Fastlane
        run: gem install fastlane

      # 4) Criar o arquivo da API Key
      - name: Create API Key
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | base64 --decode > AuthKey_OLGA.p8

      # 5) Debug: Verificar a existência do arquivo .p8
      - name: Debug Key File
        run: |
          ls -la
          if [ -f "./AuthKey_OLGA.p8" ]; then
            echo "AuthKey_OLGA.p8 encontrado!"
          else
            echo "Erro: AuthKey_OLGA.p8 não encontrado!"
            exit 1
          fi

      # 6) Sincronizar Certificados e Profiles para o iOS
      - name: Sync Certificates and Profiles
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: fastlane match appstore

      # 7) Fazer o Build e Deploy do iOS
      - name: Build & Deploy iOS
        env:
          FASTLANE_USER: ${{ secrets.APPLE_ID }}
          FASTLANE_PASSWORD: ${{ secrets.APPLE_SPECIFIC_PASSWORD }}
        run: fastlane ios deploy
