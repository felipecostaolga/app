# src/android/fastlane/Fastfile

default_platform(:ios)

desc "Deploy de tudo (Android + iOS) - para rodar localmente"
lane :deploy_all do
  UI.message("=== Deploy Android ===")
  sh("fastlane android deploy_android")

  UI.message("=== Deploy iOS ===")
  sh("fastlane ios deploy_ios")
end

platform :android do
  desc "Build e envio para Google Play"
  lane :deploy_android do
    gradle(task: "bundle", build_type: "Release")
    supply(
      aab: "app/build/outputs/bundle/release/app-release.aab",
      track: "production"
    )
  end
end

platform :ios do
  desc "Build e envio para App Store Connect"
  lane :deploy_ios do
    # Definir o diretório base para iOS
    ios_dir = File.expand_path("../../../ios", __FILE__)

    # Configurações da API Key do App Store Connect
    api_key = app_store_connect_api_key(
      key_id: "BRY3V3XY2H",
      issuer_id: "76d6f819-587c-4293-8e62-fe0c9b51c1f1",
      key_filepath: File.join(ios_dir, "AuthKey_OLGA.p8")
    )

    # Sincroniza os certificados e perfis de provisionamento
    match(
      type: "appstore",
      app_identifier: "br.com.delivery.thefamous",
      git_url: "https://#{ENV['CERT_GIT']}@github.com/felipecostaolga/app.git",
      api_key: api_key
    )

    # Constrói o aplicativo
    build_app(
      scheme: "DVRO",
      workspace: File.join(ios_dir, "DVRO.xcworkspace"),
      export_method: "app-store"
    )

    # Faz upload para a App Store
    upload_to_app_store(
      api_key: api_key,
      skip_metadata: true,
      skip_screenshots: true
    )
  end
end
