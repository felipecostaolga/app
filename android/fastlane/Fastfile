# default_platform(:ios)


desc "Faz deploy do Android e depois do iOS"
  lane :deploy_all do
    UI.message("=== Iniciando Deploy do Android... ===")
    sh("fastlane android deploy")
  
    UI.message("=== Iniciando Deploy do iOS... ===")
    sh("fastlane ios deploy")
  end
  

# Configuração para Android
platform :android do
  desc "Deploy (build .aab e envia para a Play Store)"
  lane :deploy do
    gradle(
      task: "bundle",
      build_type: "Release"
    )

    supply(
      aab: "app/build/outputs/bundle/release/app-release.aab",
      track: "production"
    )
  end

  desc "Cria o app do zero na Play Store"
  lane :create_app do
    gradle(
      task: "bundle",
      build_type: "Release"
    )

    supply(
      aab: "app/build/outputs/bundle/release/app-release.aab",
      track: "production",
      json_key: "./google-play-key.json",
      package_name: "br.com.delivery.thefamous",
      skip_upload_images: true, 
      skip_upload_screenshots: true, 
      skip_upload_changelogs: true, 
      skip_upload_metadata: true
    )
  end
end

# Configuração iOS
platform :ios do
  desc "Build e deploy para o App Store Connect"
  lane :deploy do
    # Configuração de autenticação
    api_key = app_store_connect_api_key(
      key_id: "BRY3V3XY2H",
      issuer_id: "76d6f819-587c-4293-8e62-fe0c9b51c1f1",
      key_filepath: "./AuthKey_OLGA.p8"
    )

    # Sincroniza certificados e profiles
    match(
      type: "appstore",
      app_identifier: "br.com.delivery.thefamous", 
      api_key: api_key
    )

    # Build do app
    build_app(
      scheme: "DVRO",
      export_method: "app-store"
    )

    # Upload para App Store Connect
    upload_to_app_store(
      api_key: api_key,
      skip_metadata: true,
      skip_screenshots: true
    )
  end
end
